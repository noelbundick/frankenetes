{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiserverDnsNameLabel": {
      "type": "string",
      "defaultValue": "[toLower(concat('frankenetes-apiserver', take(uniqueString(resourceGroup().id), 6)))]"
    },
    "etcdDnsNameLabel": {
      "type": "string",
      "defaultValue": "[toLower(concat('frankenetes-etcd', take(uniqueString(resourceGroup().id), 6)))]"
    },
    "k8sVersion": {
      "type": "string",
      "defaultValue": "v1.9.2"
    },
    "vkPodResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "servicePrincipalClientId": {
      "type": "string"
    },
    "servicePrincipalClientSecret": {
      "type": "securestring"
    },
    "servicePrincipalObjectId": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[toLower(concat('frankenetes', take(uniqueString(resourceGroup().id), 6)))]"
    }
  },
  "variables": {
    "contributorRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "etcdFQDN": "[concat(parameters('etcdDnsNameLabel'), '.', resourceGroup().location, '.azurecontainer.io')]",
    "apiserverFQDN": "[concat(parameters('apiserverDnsNameLabel'), '.', resourceGroup().location, '.azurecontainer.io')]",
    "sharesToCreate": "tls kubeconfigs etcd apiserver controller-manager scheduler virtual-kubelet",
    "vkConfig": "[concat('{\"clientId\": \"', parameters('servicePrincipalClientId'), '\",\"clientSecret\": \"', parameters('servicePrincipalClientSecret'), '\",\"subscriptionId\": \"', subscription().subscriptionId, '\",\"tenantId\": \"', subscription().tenantId, '\",\"activeDirectoryEndpointUrl\": \"https://login.microsoftonline.com/\",\"resourceManagerEndpointUrl\": \"https://management.azure.com/\",\"activeDirectoryGraphResourceId\": \"https://graph.windows.net/\",\"sqlManagementEndpointUrl\": \"database.windows.net\",\"galleryEndpointUrl\": \"https://gallery.azure.com/\",\"managementEndpointUrl\": \"https://management.core.windows.net/\"}')]",
    "storageApiVersion": "[providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]]"
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2015-07-01",
      "name": "[guid(resourceGroup().id)]",
      "properties": {
        "principalId": "[parameters('servicePrincipalObjectId')]",
        "roleDefinitionId": "[variables('contributorRole')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "name": "[parameters('storageAccountName')]",
      "kind": "StorageV2",
      "sku": { 
        "name": "Standard_LRS"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          }
        },
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "name": "setup",
      "properties": {
        "containers": [
          {
            "name": "setup",
            "properties": {
              "command": [
                "/bin/bash",
                "-c",
                "for i in $SHARES; do az storage share create -n $i; done"
              ],
              "environmentVariables": [
                {
                  "name": "AZURE_STORAGE_ACCOUNT",
                  "value": "[parameters('storageAccountName')]"
                },
                {
                  "name": "AZURE_STORAGE_KEY",
                  "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
                },
                {
                  "name": "SHARES",
                  "value": "[variables('sharesToCreate')]"
                }
              ],
              "image": "microsoft/azure-cli",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure"
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'setup')]"
      ],
      "name": "cfssl",
      "properties": {
        "containers": [
          {
            "name": "cfssl",
            "properties": {
              "command": [
                "/bin/sh",
                "-c",
                "[concat('chmod +x /frankenetes/create_certs.sh && /frankenetes/create_certs.sh ', variables('etcdFQDN'), ' ', variables('apiserverFQDN'), ' && cp /frankenetes/*.pem /tls')]"
              ],
              "image": "cfssl/cfssl",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "scripts",
                  "mountPath": "/frankenetes"
                },
                {
                  "name": "tls",
                  "mountPath": "/tls"
                },
                {
                  "name": "etcd",
                  "mountPath": "/etcd"
                },
                {
                  "name": "apiserver",
                  "mountPath": "/apiserver"
                },
                {
                  "name": "controllermanager",
                  "mountPath": "/controllermanager"
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "volumes": [
          {
            "name": "scripts",
            "gitRepo": {
              "repository": "https://gist.github.com/5e6b98f807a968c89917c44b3e714553.git",
              "directory": "."
            }
          },
          {
            "name": "tls",
            "azureFile": {
              "shareName": "tls",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "etcd",
            "azureFile": {
              "shareName": "etcd",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "apiserver",
            "azureFile": {
              "shareName": "apiserver",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "controllermanager",
            "azureFile": {
              "shareName": "controller-manager",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'cfssl')]"
      ],
      "name": "kubeconfig",
      "properties": {
        "containers": [
          {
            "name": "kubeconfig",
            "properties": {
              "command": [
                "/bin/sh",
                "-c",
                "[concat('chmod +x /frankenetes/create_kubeconfigs.sh && /frankenetes/create_kubeconfigs.sh ', variables('apiServerFQDN'), ' /tls /kubeconfigs')]"
              ],
              "image": "[concat('lachlanevenson/k8s-kubectl:', parameters('k8sVersion'))]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "scripts",
                  "mountPath": "/frankenetes"
                },
                {
                  "name": "tls",
                  "mountPath": "/tls"
                },
                {
                  "name": "kubeconfigs",
                  "mountPath": "/kubeconfigs"
                },
                {
                  "name": "controllermanager",
                  "mountPath": "/controllermanager"
                },
                {
                  "name": "scheduler",
                  "mountPath": "/scheduler"
                },
                {
                  "name": "virtualkubelet",
                  "mountPath": "/virtualkubelet"
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "volumes": [
          {
            "name": "scripts",
            "gitRepo": {
              "repository": "https://gist.github.com/5e6b98f807a968c89917c44b3e714553.git",
              "directory": "."
            }
          },
          {
            "name": "tls",
            "azureFile": {
              "shareName": "tls",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "kubeconfigs",
            "azureFile": {
              "shareName": "kubeconfigs",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "controllermanager",
            "azureFile": {
              "shareName": "controller-manager",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "scheduler",
            "azureFile": {
              "shareName": "scheduler",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "virtualkubelet",
            "azureFile": {
              "shareName": "virtual-kubelet",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'kubeconfig')]"
      ],
      "name": "etcd",
      "properties": {
        "containers": [
          {
            "name": "etcd",
            "properties": {
              "command": [
                "/usr/local/bin/etcd",
                "--name=frankenetes-etcd-0",
                "--cert-file=/etcd/etcd.pem",
                "--key-file=/etcd/etcd-key.pem",
                "--trusted-ca-file=/etcd/ca.pem",
                "--client-cert-auth",
                "--listen-client-urls=https://0.0.0.0:2379",
                "[concat('--advertise-client-urls=https://', variables('etcdFQDN'), ':2379')]",
                "--data-dir=/etcd/data",
                "--wal-dir=/etcd-wal"
              ],
              "image": "quay.io/coreos/etcd:v3.2.8",
              "ports": [
                {
                  "port": 2379,
                  "protocol": "TCP"
                },
                {
                  "port": 2380,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "azurefile",
                  "mountPath": "/etcd"
                }
              ]
            }
          }
        ],
        "ipAddress": {
          "dnsNameLabel": "[parameters('etcdDnsNameLabel')]",
          "type": "Public",
          "ports": [
            {
              "port": 2379,
              "protocol": "TCP"
            },
            {
              "port": 2380,
              "protocol": "TCP"
            }
          ]
        },
        "osType": "Linux",
        "restartPolicy": "Always",
        "volumes": [
          {
            "name": "azurefile",
            "azureFile": {
              "shareName": "etcd",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'kubeconfig')]"
      ],
      "name": "apiserver",
      "properties": {
        "containers": [
          {
            "name": "apiserver",
            "properties": {
              "command": [
                "/apiserver",
                "--admission-control=NamespaceLifecycle,LimitRanger,ResourceQuota", 
                "--advertise-address=0.0.0.0",
                "--allow-privileged=false",
                "--apiserver-count=1",
                "--audit-log-maxage=30",
                "--audit-log-maxbackup=3",
                "--audit-log-maxsize=100",
                "--audit-log-path=/apisrv/log/audit.log",
                "--authorization-mode=Node,RBAC",
                "--bind-address=0.0.0.0", 
                "--client-ca-file=/apisrv/ca.pem", 
                "--enable-swagger-ui=true",
                "--etcd-cafile=/apisrv/ca.pem",
                "--etcd-certfile=/apisrv/etcd.pem",
                "--etcd-keyfile=/apisrv/etcd-key.pem",
                "[concat('--etcd-servers=https://', variables('etcdFQDN'), ':2379')]",
                "--event-ttl=1h",
                "--insecure-bind-address=127.0.0.1",
                "--kubelet-certificate-authority=/apisrv/ca.pem",
                "--kubelet-client-certificate=/apisrv/kubernetes.pem",
                "--kubelet-client-key=/apisrv/kubernetes-key.pem",
                "--kubelet-https=true",
                "--runtime-config=api/all",
                "--runtime-config=admissionregistration.k8s.io/v1alpha1",
                "--service-account-key-file=/apisrv/ca-key.pem",
                "--service-node-port-range=30000-32767",
                "--tls-ca-file=/apisrv/ca.pem",
                "--tls-cert-file=/apisrv/kubernetes.pem",
                "--tls-private-key-file=/apisrv/kubernetes-key.pem",
                "--v=2"
              ],
              "image": "[concat('gcr.io/google-containers/hyperkube-amd64:', parameters('k8sVersion'))]",
              "ports": [
                {
                  "port": 6443,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "azurefile",
                  "mountPath": "/apisrv"
                }
              ]
            }
          }
        ],
        "ipAddress": {
          "dnsNameLabel": "[parameters('apiserverDnsNameLabel')]",
          "type": "Public",
          "ports": [
            {
              "port": 6443,
              "protocol": "TCP"
            }
          ]
        },
        "osType": "Linux",
        "restartPolicy": "Always",
        "volumes": [
          {
            "name": "azurefile",
            "azureFile": {
              "shareName": "apiserver",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'kubeconfig')]"
      ],
      "name": "controllermanager",
      "properties": {
        "containers": [
          {
            "name": "controllermanager",
            "properties": {
              "command": [
                "/controller-manager",
                "--address=0.0.0.0",
                "--cluster-cidr=10.200.0.0/16",
                "--cluster-name=kubernetes",
                "--cluster-signing-cert-file=/cm/ca.pem",
                "--cluster-signing-key-file=/cm/ca-key.pem",
                "--kubeconfig=/cm/controller-manager.kubeconfig",
                "--leader-elect=true",
                "--root-ca-file=/cm/ca.pem",
                "--service-account-private-key-file=/cm/ca-key.pem",
                "--use-service-account-credentials",
                "--v=2"
              ],
              "image": "[concat('gcr.io/google-containers/hyperkube-amd64:', parameters('k8sVersion'))]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "azurefile",
                  "mountPath": "/cm"
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "Always",
        "volumes": [
          {
            "name": "azurefile",
            "azureFile": {
              "shareName": "controller-manager",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'kubeconfig')]"
      ],
      "name": "scheduler",
      "properties": {
        "containers": [
          {
            "name": "scheduler",
            "properties": {
              "command": [
                "/scheduler",
                "--kubeconfig=/sched/scheduler.kubeconfig",
                "--leader-elect=true",
                "--v=2"
              ],
              "image": "[concat('gcr.io/google-containers/hyperkube-amd64:', parameters('k8sVersion'))]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "azurefile",
                  "mountPath": "/sched"
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "Always",
        "volumes": [
          {
            "name": "azurefile",
            "azureFile": {
              "shareName": "scheduler",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'apiserver')]"
      ],
      "name": "defaults",
      "properties": {
        "containers": [
          {
            "name": "defaults",
            "properties": {
              "command": [
                "/bin/sh",
                "-c",
                "chmod +x /frankenetes/apply_defaults.sh && /frankenetes/apply_defaults.sh /kubeconfigs/admin.kubeconfig"
              ],
              "image": "[concat('lachlanevenson/k8s-kubectl:', parameters('k8sVersion'))]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "scripts",
                  "mountPath": "/frankenetes"
                },
                {
                  "name": "kubeconfigs",
                  "mountPath": "/kubeconfigs"
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "volumes": [
          {
            "name": "scripts",
            "gitRepo": {
              "repository": "https://gist.github.com/5e6b98f807a968c89917c44b3e714553.git",
              "directory": "."
            }
          },
          {
            "name": "kubeconfigs",
            "azureFile": {
              "shareName": "kubeconfigs",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', 'defaults')]"
      ],
      "name": "virtual-kubelet",
      "properties": {
        "containers": [
          {
            "name": "virtual-kubelet",
            "properties": {
              "command": [
                "/usr/bin/virtual-kubelet",
                "--kubeconfig", "/etc/virtual-kubelet/virtual-kubelet.kubeconfig",
                "--nodename", "virtual-kubelet",
                "--os", "Linux",
                "--provider", "azure"
              ],
              "environmentVariables": [
                {
                  "name": "AZURE_AUTH_LOCATION",
                  "value": "/etc/virtual-kubelet/secret/credentials.json"
                },
                {
                  "name": "ACI_RESOURCE_GROUP",
                  "value": "[parameters('vkPodResourceGroupName')]"
                },
                {
                  "name": "ACI_REGION",
                  "value": "[resourceGroup().location]"
                }
              ],
              "image": "microsoft/virtual-kubelet",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "azurefile",
                  "mountPath": "/etc/virtual-kubelet"
                },
                {
                  "name": "secret",
                  "mountPath": "/etc/virtual-kubelet/secret"
                }
              ]
            }
          },
          {
            "name": "virtual-kubelet-win",
            "properties": {
              "command": [
                "/usr/bin/virtual-kubelet",
                "--kubeconfig", "/etc/virtual-kubelet/virtual-kubelet-win.kubeconfig",
                "--nodename", "virtual-kubelet-win",
                "--os", "Windows",
                "--provider", "azure"
              ],
              "environmentVariables": [
                {
                  "name": "AZURE_AUTH_LOCATION",
                  "value": "/etc/virtual-kubelet/secret/credentials.json"
                },
                {
                  "name": "ACI_RESOURCE_GROUP",
                  "value": "[parameters('vkPodResourceGroupName')]"
                },
                {
                  "name": "ACI_REGION",
                  "value": "[resourceGroup().location]"
                }
              ],
              "image": "microsoft/virtual-kubelet",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              },
              "volumeMounts": [
                {
                  "name": "azurefile",
                  "mountPath": "/etc/virtual-kubelet"
                },
                {
                  "name": "secret",
                  "mountPath": "/etc/virtual-kubelet/secret"
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "Always",
        "volumes": [
          {
            "name": "azurefile",
            "azureFile": {
              "shareName": "virtual-kubelet",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
            }
          },
          {
            "name": "secret",
            "secret": {
              "credentials.json": "[base64(variables('vkConfig'))]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "kubeconfig": {
      "type": "string",
      "value": "[concat('az storage file download --account-name ', parameters('storageAccountName'), ' -s kubeconfigs -p admin.kubeconfig')]"
    }
  }
}